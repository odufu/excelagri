swagger: "2.0"
info:
  description: "API documentation for Excel Agri"
  version: "1.0.0"
  title: "E X C E L - A G R I"

host: "api.example.com"
basePath: "/api/v1"

tags:
  - name: "Authentication"
    description: "Authentication-related endpoints"
  - name: "Users"
    description: "User management endpoints"
  - name: "Products"
    description: "Product management endpoints"
  - name: "Brand"
    description: "Brand management endpoints"
  - name: "Category"
    description: "Category management endpoints"

paths:
  /auth/signup:
    post:
      tags:
        - "Authentication"
      summary: "Register a new user"
      description: "Endpoint to register a new user"
      responses:
        "200":
          description: "User registered successfully"

  /auth/verifyOTP:
    post:
      tags:
        - "Authentication"
      summary: "Verify OTP"
      description: "Verify OTP for user registration"
      responses:
        "200":
          description: "OTP verified successfully"

  /auth/login:
    post:
      tags:
        - "Authentication"
      summary: "Login"
      description: "Authenticate user login"
      responses:
        "200":
          description: "User logged in successfully"

  /auth/forgotPassword:
    post:
      tags:
        - "Authentication"
      summary: "Forgot Password"
      description: "Initiate password reset"
      responses:
        "200":
          description: "Password reset link sent"

  /auth/resetPassword:
    post:
      tags:
        - "Authentication"
      summary: "Reset Password"
      description: "Reset user password"
      responses:
        "200":
          description: "Password reset successfully"

  /users:
    get:
      tags:
        - "Users"
      summary: "Get Users"
      description: "Retrieve a list of users"
      responses:
        "200":
          description: "List of users"

  /users/{userId}:
    get:
      tags:
        - "Users"
      summary: "Get Profile"
      description: "Retrieve user profile by ID"
      parameters:
        - name: "userId"
          in: "path"
          required: true
          type: "string"
      responses:
        "200":
          description: "User profile"

  /users/admin:
    get:
      tags:
        - "Users"
      summary: "Admin Get Users"
      description: "Admin retrieval of users"
      responses:
        "200":
          description: "Admin user list"

  /products:
    post:
      tags:
        - "Products"
      summary: "Create Product"
      description: "Create a new product"
      responses:
        "201":
          description: "Product created"

    get:
      tags:
        - "Products"
      summary: "Get All Products"
      description: "Retrieve all products"
      responses:
        "200":
          description: "List of products"

  /products/{productId}:
    get:
      tags:
        - "Products"
      summary: "Get Single Product"
      description: "Retrieve a single product by ID"
      parameters:
        - name: "productId"
          in: "path"
          required: true
          type: "string"
      responses:
        "200":
          description: "Product details"

    put:
      tags:
        - "Products"
      summary: "Edit Product"
      description: "Edit product details"
      parameters:
        - name: "productId"
          in: "path"
          required: true
          type: "string"
      responses:
        "200":
          description: "Product updated"

    delete:
      tags:
        - "Products"
      summary: "Delete Product"
      description: "Delete a product by ID"
      parameters:
        - name: "productId"
          in: "path"
          required: true
          type: "string"
      responses:
        "204":
          description: "Product deleted"

  /brand:
    post:
      tags:
        - "Brand"
      summary: "Create Brand"
      description: "Create a new brand"
      responses:
        "201":
          description: "Brand created"

    get:
      tags:
        - "Brand"
      summary: "Get All Brands"
      description: "Retrieve all brands"
      responses:
        "200":
          description: "List of brands"

  /brand/{brandId}:
    get:
      tags:
        - "Brand"
      summary: "Get Single Brand"
      description: "Retrieve a single brand by ID"
      parameters:
        - name: "brandId"
          in: "path"
          required: true
          type: "string"
      responses:
        "200":
          description: "Brand details"

    put:
      tags:
        - "Brand"
      summary: "Edit Brand"
      description: "Edit brand details"
      parameters:
        - name: "brandId"
          in: "path"
          required: true
          type: "string"
      responses:
        "200":
          description: "Brand updated"

    delete:
      tags:
        - "Brand"
      summary: "Delete Brand"
      description: "Delete a brand by ID"
      parameters:
        - name: "brandId"
          in: "path"
          required: true
          type: "string"
      responses:
        "204":
          description: "Brand deleted"

  /category:
    post:
      tags:
        - "Category"
      summary: "Create Category"
      description: "Create a new category"
      responses:
        "201":
          description: "Category created"

    get:
      tags:
        - "Category"
      summary: "Get All Categories"
      description: "Retrieve all categories"
      responses:
        "200":
          description: "List of categories"

  /category/{categoryId}:
    get:
      tags:
        - "Category"
      summary: "Get Single Category"
      description: "Retrieve a single category by ID"
      parameters:
        - name: "categoryId"
          in: "path"
          required: true
          type: "string"
      responses:
        "200":
          description: "Category details"

    put:
      tags:
        - "Category"
      summary: "Edit Category"
      description: "Edit category details"
      parameters:
        - name: "categoryId"
          in: "path"
          required: true
          type: "string"
      responses:
        "200":
          description: "Category updated"

    delete:
      tags:
        - "Category"
      summary: "Delete Category"
      description: "Delete a category by ID"
      parameters:
        - name: "categoryId"
          in: "path"
          required: true
          type: "string"
      responses:
        "204":
          description: "Category deleted"

definitions:
  User:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
      email:
        type: "string"
  Product:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
      price:
        type: "number"
  Brand:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
  Category:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
